<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="_execute_s_q_l_8c" kind="file" language="C++">
    <compoundname>ExecuteSQL.c</compoundname>
    <includes refid="stdafx_8h" local="yes">stdafx.h</includes>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdbool.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes local="yes">ctype.h</includes>
    <incdepgraph>
      <node id="31">
        <label>stdbool.h</label>
      </node>
      <node id="32">
        <label>stdlib.h</label>
      </node>
      <node id="29">
        <label>SDKDDKVer.h</label>
      </node>
      <node id="28">
        <label>targetver.h</label>
        <link refid="targetver_8h"/>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ExecuteSQL.c</label>
        <link refid="ExecuteSQL.c"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>ctype.h</label>
      </node>
      <node id="30">
        <label>stdio.h</label>
      </node>
      <node id="27">
        <label>stdafx.h</label>
        <link refid="stdafx_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_data" prot="public">Data</innerclass>
    <innerclass refid="struct_operator" prot="public">Operator</innerclass>
    <innerclass refid="struct_token" prot="public">Token</innerclass>
    <innerclass refid="struct_column" prot="public">Column</innerclass>
    <innerclass refid="struct__extension__tree__node" prot="public">_extension_tree_node</innerclass>
    <innerclass refid="struct_column_index" prot="public">ColumnIndex</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_execute_s_q_l_8c_1af4da818bdb0173747177ed4ded094c12" prot="public" static="no">
        <name>MAX_FILE_LINE_LENGTH</name>
        <initializer>4096</initializer>
        <briefdescription>
<para>読み込むファイルの一行の最大長です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="9" column="9" bodyfile="ExecuteSQL.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" prot="public" static="no">
        <name>MAX_WORD_LENGTH</name>
        <initializer>256</initializer>
        <briefdescription>
<para>SQLの一語の最大長です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="10" column="9" bodyfile="ExecuteSQL.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_execute_s_q_l_8c_1a8a172dc8da48ad20120e7a861682c32f" prot="public" static="no">
        <name>MAX_DATA_LENGTH</name>
        <initializer>256</initializer>
        <briefdescription>
<para>入出力されるデータの、各列の最大長です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="11" column="9" bodyfile="ExecuteSQL.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_execute_s_q_l_8c_1a8c2b776cce16ba8e6fff75b2c721b8ac" prot="public" static="no">
        <name>MAX_TOKEN_COUNT</name>
        <initializer>255</initializer>
        <briefdescription>
<para>SQLに含まれるトークンの最大値です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="12" column="9" bodyfile="ExecuteSQL.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" prot="public" static="no">
        <name>MAX_COLUMN_COUNT</name>
        <initializer>16</initializer>
        <briefdescription>
<para>入出力されるデータに含まれる列の最大数です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="13" column="9" bodyfile="ExecuteSQL.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_execute_s_q_l_8c_1aa68fcced9961f40a9b9a2e255bbc8a33" prot="public" static="no">
        <name>MAX_ROW_COUNT</name>
        <initializer>256</initializer>
        <briefdescription>
<para>入出力されるデータに含まれる行の最大数です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="14" column="9" bodyfile="ExecuteSQL.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" prot="public" static="no">
        <name>MAX_TABLE_COUNT</name>
        <initializer>8</initializer>
        <briefdescription>
<para>CSVとして入力されるテーブルの最大数です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="15" column="9" bodyfile="ExecuteSQL.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_execute_s_q_l_8c_1a12a0d25ad70f55c1fdcf8ef860013ee8" prot="public" static="no">
        <name>MAX_EXTENSION_TREE_NODE_COUNT</name>
        <initializer>256</initializer>
        <briefdescription>
<para>WHERE句に指定される式木のノードの最大数です。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="16" column="9" bodyfile="ExecuteSQL.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84" prot="public" static="no">
        <name>RESULT_VALUE</name>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a2bc49ec37d6a5715dd23e85f1ff5bb59" prot="public">
          <name>OK</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>問題なく終了しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a1eb58a97942127f9b7d3856ac6cb1177" prot="public">
          <name>ERR_FILE_OPEN</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>ファイルを開くことに失敗しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" prot="public">
          <name>ERR_FILE_WRITE</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>ファイルに書き込みを行うことに失敗しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af49300e99056ccb75c274f54bfbe428c" prot="public">
          <name>ERR_FILE_CLOSE</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>ファイルを閉じることに失敗しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a605a7b5193d135d441ed4ff6503ceef2" prot="public">
          <name>ERR_TOKEN_CANT_READ</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>トークン解析に失敗しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" prot="public">
          <name>ERR_SQL_SYNTAX</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>SQLの構文解析が失敗しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" prot="public">
          <name>ERR_BAD_COLUMN_NAME</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>テーブル指定を含む列名が適切ではありません。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af35f788c826bd4e0197fdc379340f2fd" prot="public">
          <name>ERR_WHERE_OPERAND_TYPE</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>演算の左右の型が適切ではありません。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a14e7f98cf531dfd11d330ec68e7184d7" prot="public">
          <name>ERR_CSV_SYNTAX</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>CSVの構文解析が失敗しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" prot="public">
          <name>ERR_MEMORY_ALLOCATE</name>
          <initializer>= 9</initializer>
          <briefdescription>
<para>メモリの取得に失敗しました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" prot="public">
          <name>ERR_MEMORY_OVER</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>用意したメモリ領域の上限を超えました。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>ExecuteSQLの戻り値の種類を表します。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="26" column="1" bodyfile="ExecuteSQL.c" bodystart="25" bodyend="38"/>
      </memberdef>
      <memberdef kind="enum" id="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27b" prot="public" static="no">
        <name>DATA_TYPE</name>
        <enumvalue id="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" prot="public">
          <name>STRING</name>
          <briefdescription>
<para>文字列型です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" prot="public">
          <name>INTEGER</name>
          <briefdescription>
<para>整数型です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba8a583f16e8d237a423c8c1d9087a4c72" prot="public">
          <name>BOOLEAN</name>
          <briefdescription>
<para>真偽値型です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>入力や出力、経過の計算に利用するデータのデータ型の種類を表します。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="42" column="1" bodyfile="ExecuteSQL.c" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="enum" id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4" prot="public" static="no">
        <name>TOKEN_KIND</name>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a89a37c3b8cfcc132733bc18b7065064e" prot="public">
          <name>NOT_TOKEN</name>
          <briefdescription>
<para>トークンを表しません。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a6ec9ae46a1e5c631ae04fc9c4c2d63bc" prot="public">
          <name>ASC</name>
          <briefdescription>
<para>ASCキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a865555c9f2e0458a7078486aa1b3254f" prot="public">
          <name>AND</name>
          <briefdescription>
<para>ANDキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8a7f2ff9fd0ff128eb1a14b98d95b4e6" prot="public">
          <name>BY</name>
          <briefdescription>
<para>BYキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ac09f77dd64a2d5dedf24b5835d9eaa5a" prot="public">
          <name>DESC</name>
          <briefdescription>
<para>DESCキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a60efb85363b2afd235602dc0aee155f0" prot="public">
          <name>FROM</name>
          <briefdescription>
<para>FROMキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a96727447c0ad447987df1c6415aef074" prot="public">
          <name>OR</name>
          <briefdescription>
<para>ORキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af3010c5c73212ce2ce652d3c18a681ad" prot="public">
          <name>ORDER</name>
          <briefdescription>
<para>ORDERキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a1697a91b22c2369eb2ba427c2d193329" prot="public">
          <name>SELECT</name>
          <briefdescription>
<para>SELECTキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a0116b78582fbf1fd6e069fde8dd308c4" prot="public">
          <name>WHERE</name>
          <briefdescription>
<para>WHEREキーワードです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7a48eb0b5d5a758daa1bfac07896eccb" prot="public">
          <name>ASTERISK</name>
          <briefdescription>
<para>＊ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" prot="public">
          <name>COMMA</name>
          <briefdescription>
<para>， 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7093c88a2f741fb4dae5c36809a1958f" prot="public">
          <name>CLOSE_PAREN</name>
          <briefdescription>
<para>） 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fdcd2ffa8f71b49da9e0cfd4fb893f" prot="public">
          <name>DOT</name>
          <briefdescription>
<para>． 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a59a84258a4cb9025b567ee5139455029" prot="public">
          <name>EQUAL</name>
          <briefdescription>
<para>＝ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a5fae95457121bd697edd588d1b64cc7c" prot="public">
          <name>GREATER_THAN</name>
          <briefdescription>
<para>＞ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a263e9ce6c7c1285c26f7c51b2d457354" prot="public">
          <name>GREATER_THAN_OR_EQUAL</name>
          <briefdescription>
<para>＞＝ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a41b05932cd237b2b133fff1ade85bed5" prot="public">
          <name>LESS_THAN</name>
          <briefdescription>
<para>＜ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ae9cbcadb9d4b6c38a9d5e6311cba749d" prot="public">
          <name>LESS_THAN_OR_EQUAL</name>
          <briefdescription>
<para>＜＝ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" prot="public">
          <name>MINUS</name>
          <briefdescription>
<para>− 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aee522b0a37857a8fdd19f82ad1b9b1d6" prot="public">
          <name>NOT_EQUAL</name>
          <briefdescription>
<para>＜＞ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af0b0ce2414f256bad9da221d2532147d" prot="public">
          <name>OPEN_PAREN</name>
          <briefdescription>
<para>（ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fe59ef12c3d13dc2a4d14c9b16c1f9" prot="public">
          <name>PLUS</name>
          <briefdescription>
<para>＋ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aaabdfe7000ca535236502bb0c87ad944" prot="public">
          <name>SLASH</name>
          <briefdescription>
<para>／ 記号です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" prot="public">
          <name>IDENTIFIER</name>
          <briefdescription>
<para>識別子です。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8ade753a42e694e371cfe2d7e0a3c702" prot="public">
          <name>INT_LITERAL</name>
          <briefdescription>
<para>整数リテラルです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a655e632575aa38fd0f04138439932a22" prot="public">
          <name>STRING_LITERAL</name>
          <briefdescription>
<para>文字列リテラルです。 </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>トークンの種類を表します。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="50" column="1" bodyfile="ExecuteSQL.c" bodystart="49" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_execute_s_q_l_8c_1a6646c8070fe46fcefe5d1985f0eb327c" prot="public" static="no">
        <type>struct <ref refid="struct__extension__tree__node" kindref="compound">_extension_tree_node</ref></type>
        <definition>typedef struct _extension_tree_node  ExtensionTreeNode</definition>
        <argsstring></argsstring>
        <name>ExtensionTreeNode</name>
        <briefdescription>
<para>WHERE句の条件の式木を表します。 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="128" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_execute_s_q_l_8c_1a5cc0859d07762d84725517dcee15f7cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ExecuteSQL</definition>
        <argsstring>(const char *, const char *)</argsstring>
        <name>ExecuteSQL</name>
        <param>
          <type>const char *</type>
          <defname>sql</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>outputFileName</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>カレントディレクトリにあるCSVに対し、簡易的なSQLを実行し、結果をファイルに出力します。 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sql</parametername>
</parameternamelist>
<parameterdescription>
<para>実行するSQLです。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outputFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>SQLの実行結果をCSVとして出力するファイル名です。拡張子を含みます。 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>実行した結果の状態です。</para></simplesect>
カレントディレクトリにあるCSVに対し、簡易的なSQLを実行し、結果をファイルに出力します。 <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">sql</parametername>
</parameternamelist>
<parameterdescription>
<para>実行するSQLです。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outputFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>SQLの実行結果をCSVとして出力するファイル名です。拡張子を含みます。 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>実行した結果の状態です。 </para></simplesect>
<parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>OK=0</parametername>
</parameternamelist>
<parameterdescription>
<para>問題なく終了しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_FILE_OPEN=1</parametername>
</parameternamelist>
<parameterdescription>
<para>ファイルを開くことに失敗しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_FILE_WRITE=2</parametername>
</parameternamelist>
<parameterdescription>
<para>ファイルに書き込みを行うことに失敗しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_FILE_CLOSE=3</parametername>
</parameternamelist>
<parameterdescription>
<para>ファイルを閉じることに失敗しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_TOKEN_CANT_READ=4</parametername>
</parameternamelist>
<parameterdescription>
<para>トークン解析に失敗しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_SQL_SYNTAX=5</parametername>
</parameternamelist>
<parameterdescription>
<para>SQLの構文解析が失敗しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_BAD_COLUMN_NAME=6</parametername>
</parameternamelist>
<parameterdescription>
<para>テーブル指定を含む列名が適切ではありません。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_WHERE_OPERAND_TYPE=7</parametername>
</parameternamelist>
<parameterdescription>
<para>演算の左右の型が適切ではありません。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_CSV_SYNTAX=8</parametername>
</parameternamelist>
<parameterdescription>
<para>CSVの構文解析が失敗しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_MEMORY_ALLOCATE=9</parametername>
</parameternamelist>
<parameterdescription>
<para>メモリの取得に失敗しました。 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ERR_MEMORY_OVER=10</parametername>
</parameternamelist>
<parameterdescription>
<para>用意したメモリ領域の上限を超えました。</para></parameterdescription>
</parameteritem>
</parameterlist>
参照するテーブルは、テーブル名.csvの形で作成します。 <linebreak/>
一行目はヘッダ行で、その行に列名を書きます。 <linebreak/>
前後のスペース読み飛ばしやダブルクォーテーションでくくるなどの機能はありません。 <linebreak/>
列の型の定義はできないので、列のすべてのデータの値が数値として解釈できる列のデータを整数として扱います。 <linebreak/>
実行するSQLで使える機能を以下に例としてあげます。 <linebreak/>
例1: <linebreak/>
SELECT * <linebreak/>
FROM USERS <linebreak/>
 <linebreak/>
例2: 大文字小文字は区別しません。 <linebreak/>
select * <linebreak/>
from users <linebreak/>
 <linebreak/>
例3: 列の指定ができます。 <linebreak/>
SELECT Id, Name <linebreak/>
FROM USERS <linebreak/>
 <linebreak/>
例4: テーブル名を指定して列の指定ができます。 <linebreak/>
SELECT USERS.Id <linebreak/>
FROM USERS <linebreak/>
 <linebreak/>
例5: ORDER句が使えます。 <linebreak/>
SELECT * <linebreak/>
ORDER BY NAME <linebreak/>
FROM USERS <linebreak/>
 <linebreak/>
例6: ORDER句に複数列や昇順、降順の指定ができます。 <linebreak/>
SELECT * <linebreak/>
ORDER BY AGE DESC, Name ASC <linebreak/>
 <linebreak/>
例7: WHERE句が使えます。 <linebreak/>
SELECT * <linebreak/>
WHERE AGE &gt;= 20 <linebreak/>
FROM USERS <linebreak/>
 <linebreak/>
例8: WHERE句では文字列の比較も使えます。 <linebreak/>
SELECT * <linebreak/>
WHERE NAME &gt;= &apos;N&apos; <linebreak/>
FROM USERS <linebreak/>
 <linebreak/>
例9: WHERE句には四則演算、カッコ、AND、ORなどを含む複雑な式が利用できます。 <linebreak/>
SELECT * <linebreak/>
WHERE AGE &gt;= 20 AND (AGE &lt;= 40 || WEIGHT &lt; 100) <linebreak/>
FROM USERS <linebreak/>
 <linebreak/>
例10: FROM句に複数のテーブルが指定できます。その場合はクロスで結合します。 <linebreak/>
SELECT * <linebreak/>
FROM USERS, CHILDREN <linebreak/>
 <linebreak/>
例11: WHEREで条件をつけることにより、テーブルの結合ができます。 <linebreak/>
SELECT USERS.NAME, CHILDREN.NAME <linebreak/>
WHERE USERS.ID = CHILDREN.PARENTID <linebreak/>
FROM USERS, CHILDREN <linebreak/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ExecuteSQL.c" line="22" column="1" bodyfile="ExecuteSQL.c" bodystart="208" bodyend="1625"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdbool.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ctype.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable:4996)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_FILE_LINE_LENGTH<sp/>4096<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor">#define<sp/>MAX_WORD_LENGTH<sp/>256<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor">#define<sp/>MAX_DATA_LENGTH<sp/>256<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor">#define<sp/>MAX_TOKEN_COUNT<sp/>255<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor">#define<sp/>MAX_COLUMN_COUNT<sp/>16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor">#define<sp/>MAX_ROW_COUNT<sp/>256<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">#define<sp/>MAX_TABLE_COUNT<sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">#define<sp/>MAX_EXTENSION_TREE_NODE_COUNT<sp/>256<sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a5cc0859d07762d84725517dcee15f7cd" kindref="member">ExecuteSQL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84" kindref="member">RESULT_VALUE</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a1eb58a97942127f9b7d3856ac6cb1177" kindref="member">ERR_FILE_OPEN</ref><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" kindref="member">ERR_FILE_WRITE</ref><sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af49300e99056ccb75c274f54bfbe428c" kindref="member">ERR_FILE_CLOSE</ref><sp/>=<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a605a7b5193d135d441ed4ff6503ceef2" kindref="member">ERR_TOKEN_CANT_READ</ref><sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref><sp/>=<sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" kindref="member">ERR_BAD_COLUMN_NAME</ref><sp/>=<sp/>6,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af35f788c826bd4e0197fdc379340f2fd" kindref="member">ERR_WHERE_OPERAND_TYPE</ref><sp/>=<sp/>7,<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a14e7f98cf531dfd11d330ec68e7184d7" kindref="member">ERR_CSV_SYNTAX</ref><sp/>=<sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" kindref="member">ERR_MEMORY_ALLOCATE</ref><sp/>=<sp/>9,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref><sp/>=<sp/>10<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal">};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27b" kindref="member">DATA_TYPE</ref></highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba8a583f16e8d237a423c8c1d9087a4c72" kindref="member">BOOLEAN</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4" kindref="member">TOKEN_KIND</ref></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a89a37c3b8cfcc132733bc18b7065064e" kindref="member">NOT_TOKEN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a6ec9ae46a1e5c631ae04fc9c4c2d63bc" kindref="member">ASC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a865555c9f2e0458a7078486aa1b3254f" kindref="member">AND</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8a7f2ff9fd0ff128eb1a14b98d95b4e6" kindref="member">BY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ac09f77dd64a2d5dedf24b5835d9eaa5a" kindref="member">DESC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a60efb85363b2afd235602dc0aee155f0" kindref="member">FROM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a96727447c0ad447987df1c6415aef074" kindref="member">OR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af3010c5c73212ce2ce652d3c18a681ad" kindref="member">ORDER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a1697a91b22c2369eb2ba427c2d193329" kindref="member">SELECT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a0116b78582fbf1fd6e069fde8dd308c4" kindref="member">WHERE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7a48eb0b5d5a758daa1bfac07896eccb" kindref="member">ASTERISK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7093c88a2f741fb4dae5c36809a1958f" kindref="member">CLOSE_PAREN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fdcd2ffa8f71b49da9e0cfd4fb893f" kindref="member">DOT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a59a84258a4cb9025b567ee5139455029" kindref="member">EQUAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a5fae95457121bd697edd588d1b64cc7c" kindref="member">GREATER_THAN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a263e9ce6c7c1285c26f7c51b2d457354" kindref="member">GREATER_THAN_OR_EQUAL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a41b05932cd237b2b133fff1ade85bed5" kindref="member">LESS_THAN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ae9cbcadb9d4b6c38a9d5e6311cba749d" kindref="member">LESS_THAN_OR_EQUAL</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" kindref="member">MINUS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aee522b0a37857a8fdd19f82ad1b9b1d6" kindref="member">NOT_EQUAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af0b0ce2414f256bad9da221d2532147d" kindref="member">OPEN_PAREN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fe59ef12c3d13dc2a4d14c9b16c1f9" kindref="member">PLUS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aaabdfe7000ca535236502bb0c87ad944" kindref="member">SLASH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8ade753a42e694e371cfe2d7e0a3c702" kindref="member">INT_LITERAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a655e632575aa38fd0f04138439932a22" kindref="member">STRING_LITERAL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="struct_data" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27b" kindref="member">DATA_TYPE</ref><sp/>type;<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">[<ref refid="_execute_s_q_l_8c_1a8a172dc8da48ad20120e7a861682c32f" kindref="member">MAX_DATA_LENGTH</ref>];<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>integer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>boolean;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>value;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}<sp/><ref refid="struct_data" kindref="compound">Data</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="struct_operator" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4" kindref="member">TOKEN_KIND</ref><sp/>kind;<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>order;<sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/><ref refid="struct_operator" kindref="compound">Operator</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="struct_token" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4" kindref="member">TOKEN_KIND</ref><sp/>kind;<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>word[<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>];<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}<sp/><ref refid="struct_token" kindref="compound">Token</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="struct_column" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tableName[<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>];<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>columnName[<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>];<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}<sp/><ref refid="struct_column" kindref="compound">Column</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="struct__extension__tree__node" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__extension__tree__node" kindref="compound">_extension_tree_node</ref></highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__extension__tree__node" kindref="compound">_extension_tree_node</ref><sp/>*<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>;<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__extension__tree__node" kindref="compound">_extension_tree_node</ref><sp/>*<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_operator" kindref="compound">Operator</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__extension__tree__node" kindref="compound">_extension_tree_node</ref><sp/>*<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct__extension__tree__node_1afd500005f33748f7a4980fa3328dd191" kindref="member">inParen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__extension__tree__node_1a17b65544e06504e3e2dcfc0978c24ba6" kindref="member">parenOpenBeforeClose</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__extension__tree__node_1aaf7e9cae85c8ef976d164e1c57fe676d" kindref="member">signCoefficient</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_column" kindref="compound">Column</ref><sp/><ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct__extension__tree__node_1a522280470d8d2fa811c7077f8ea9f399" kindref="member">calculated</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/><ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/><ref refid="_execute_s_q_l_8c_1a6646c8070fe46fcefe5d1985f0eb327c" kindref="member">ExtensionTreeNode</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="struct_column_index" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>table;<sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>;<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal">}<sp/><ref refid="struct_column_index" kindref="compound">ColumnIndex</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/>以上ヘッダに相当する部分。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a5cc0859d07762d84725517dcee15f7cd" kindref="member">ExecuteSQL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>sql,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>outputFileName)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84" kindref="member">RESULT_VALUE</ref><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>発生したエラーの種類です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*inputTableFiles[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>]<sp/>=<sp/>{<sp/>NULL<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>読み込む入力ファイルの全てのファイルポインタです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*outputFile<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>書き込むファイルのファイルポインタです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>関数の戻り値を一時的に保存します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>検索時に見つかったかどうかの結果を一時的に保存します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*search<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>文字列検索に利用するポインタです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>***currentRow<sp/>=<sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>データ検索時に現在見ている行を表します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**inputData[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>][<ref refid="_execute_s_q_l_8c_1aa68fcced9961f40a9b9a2e255bbc8a33" kindref="member">MAX_ROW_COUNT</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力データです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**outputData[<ref refid="_execute_s_q_l_8c_1aa68fcced9961f40a9b9a2e255bbc8a33" kindref="member">MAX_ROW_COUNT</ref>]<sp/>=<sp/>{<sp/>NULL<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>出力データです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**allColumnOutputData[<ref refid="_execute_s_q_l_8c_1aa68fcced9961f40a9b9a2e255bbc8a33" kindref="member">MAX_ROW_COUNT</ref>]<sp/>=<sp/>{<sp/>NULL<sp/>};<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>出力するデータに対応するインデックスを持ち、すべての入力データを保管します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*alpahUnder<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_abcdefghijklmnopqrstuvwxzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>全てのアルファベットの大文字小文字とアンダーバーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*alpahNumUnder<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;_abcdefghijklmnopqrstuvwxzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>全ての数字とアルファベットの大文字小文字とアンダーバーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*signNum<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+-0123456789&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>全ての符号と数字です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*num<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>全ての数字です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>space<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t\r\n&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>全ての空白文字です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inputDataを初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputData)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputData[0]);<sp/>i++)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputData[0])<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputData[0][0]);<sp/>j++){</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputData[i][j]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SQLからトークンを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keywordConditionsとsignConditionsは先頭から順に検索されるので、前方一致となる二つの項目は順番に気をつけて登録しなくてはいけません。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>キーワードをトークンとして認識するためのキーワード一覧情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>keywordConditions[]<sp/>=</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a865555c9f2e0458a7078486aa1b3254f" kindref="member">AND</ref>,<sp/></highlight><highlight class="stringliteral">&quot;AND&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a6ec9ae46a1e5c631ae04fc9c4c2d63bc" kindref="member">ASC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ASC&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8a7f2ff9fd0ff128eb1a14b98d95b4e6" kindref="member">BY</ref>,<sp/></highlight><highlight class="stringliteral">&quot;BY&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ac09f77dd64a2d5dedf24b5835d9eaa5a" kindref="member">DESC</ref>,<sp/></highlight><highlight class="stringliteral">&quot;DESC&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a60efb85363b2afd235602dc0aee155f0" kindref="member">FROM</ref>,<sp/></highlight><highlight class="stringliteral">&quot;FROM&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af3010c5c73212ce2ce652d3c18a681ad" kindref="member">ORDER</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ORDER&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a96727447c0ad447987df1c6415aef074" kindref="member">OR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;OR&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a1697a91b22c2369eb2ba427c2d193329" kindref="member">SELECT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SELECT&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a0116b78582fbf1fd6e069fde8dd308c4" kindref="member">WHERE</ref>,<sp/></highlight><highlight class="stringliteral">&quot;WHERE&quot;</highlight><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>記号をトークンとして認識するための記号一覧情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>signConditions[]<sp/>=</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a263e9ce6c7c1285c26f7c51b2d457354" kindref="member">GREATER_THAN_OR_EQUAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&gt;=&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ae9cbcadb9d4b6c38a9d5e6311cba749d" kindref="member">LESS_THAN_OR_EQUAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;=&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aee522b0a37857a8fdd19f82ad1b9b1d6" kindref="member">NOT_EQUAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&gt;&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7a48eb0b5d5a758daa1bfac07896eccb" kindref="member">ASTERISK</ref>,<sp/></highlight><highlight class="stringliteral">&quot;*&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref>,<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7093c88a2f741fb4dae5c36809a1958f" kindref="member">CLOSE_PAREN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fdcd2ffa8f71b49da9e0cfd4fb893f" kindref="member">DOT</ref>,<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a59a84258a4cb9025b567ee5139455029" kindref="member">EQUAL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;=&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a5fae95457121bd697edd588d1b64cc7c" kindref="member">GREATER_THAN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a41b05932cd237b2b133fff1ade85bed5" kindref="member">LESS_THAN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" kindref="member">MINUS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af0b0ce2414f256bad9da221d2532147d" kindref="member">OPEN_PAREN</ref>,<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fe59ef12c3d13dc2a4d14c9b16c1f9" kindref="member">PLUS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aaabdfe7000ca535236502bb0c87ad944" kindref="member">SLASH</ref>,<sp/></highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>tokens[<ref refid="_execute_s_q_l_8c_1a8c2b776cce16ba8e6fff75b2c721b8ac" kindref="member">MAX_TOKEN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>SQLを分割したトークンです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tokensNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>tokensの有効な数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>演算子の情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_operator" kindref="compound">Operator</ref><sp/>operators[]<sp/>=</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7a48eb0b5d5a758daa1bfac07896eccb" kindref="member">ASTERISK</ref>,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aaabdfe7000ca535236502bb0c87ad944" kindref="member">SLASH</ref>,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fe59ef12c3d13dc2a4d14c9b16c1f9" kindref="member">PLUS</ref>,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" kindref="member">MINUS</ref>,<sp/>2<sp/>},</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a59a84258a4cb9025b567ee5139455029" kindref="member">EQUAL</ref>,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a5fae95457121bd697edd588d1b64cc7c" kindref="member">GREATER_THAN</ref>,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a263e9ce6c7c1285c26f7c51b2d457354" kindref="member">GREATER_THAN_OR_EQUAL</ref>,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a41b05932cd237b2b133fff1ade85bed5" kindref="member">LESS_THAN</ref>,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ae9cbcadb9d4b6c38a9d5e6311cba749d" kindref="member">LESS_THAN_OR_EQUAL</ref>,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aee522b0a37857a8fdd19f82ad1b9b1d6" kindref="member">NOT_EQUAL</ref>,<sp/>3<sp/>},</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a865555c9f2e0458a7078486aa1b3254f" kindref="member">AND</ref>,<sp/>4<sp/>},</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a96727447c0ad447987df1c6415aef074" kindref="member">OR</ref>,<sp/>5<sp/>},</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>charactorBackPoint<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>SQLをトークンに分割して読み込む時に戻るポイントを記録しておきます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>charactorCursol<sp/>=<sp/>sql;<sp/></highlight><highlight class="comment">//<sp/>SQLをトークンに分割して読み込む時に現在読んでいる文字の場所を表します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tableNames[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>][<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>];<sp/></highlight><highlight class="comment">//<sp/>FROM句で指定しているテーブル名です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>tableNamesを初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tableNames)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(tableNames[0]);<sp/>i++)</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(tableNames[i],<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tableNamesNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>現在読み込まれているテーブル名の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SQLをトークンに分割て読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*charactorCursol){</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>空白を読み飛ばします。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(search<sp/>=<sp/>space;<sp/>*search<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/>*search;<sp/>++search){}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*search){</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol++;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>数値リテラルを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>先頭文字が数字であるかどうかを確認します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorBackPoint<sp/>=<sp/>charactorCursol;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(search<sp/>=<sp/>num;<sp/>*search<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/>*search;<sp/>++search){}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*search){</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>literal<sp/>=<sp/>(<ref refid="struct_token" kindref="compound">Token</ref>){<sp/>.<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8ade753a42e694e371cfe2d7e0a3c702" kindref="member">INT_LITERAL</ref>,<sp/>.word<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>読み込んだ数値リテラルの情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wordLength<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>数値リテラルに現在読み込んでいる文字の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>数字が続く間、文字を読み込み続けます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(search<sp/>=<sp/>num;<sp/>*search<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/>*search;<sp/>++search){}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*search){</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref><sp/>-<sp/>1<sp/>&lt;=<sp/>wordLength){</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>[wordLength++]<sp/>=<sp/>*search;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++charactorCursol;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*search);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>数字の後にすぐに識別子が続くのは紛らわしいので数値リテラルとは扱いません。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(search<sp/>=<sp/>alpahUnder;<sp/>*search<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/>*search;<sp/>++search){}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*search){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>[wordLength]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a8c2b776cce16ba8e6fff75b2c721b8ac" kindref="member">MAX_TOKEN_COUNT</ref><sp/>&lt;=<sp/>tokensNum){</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[tokensNum++]<sp/>=<sp/>literal;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol<sp/>=<sp/>charactorBackPoint;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>文字列リテラルを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>文字列リテラルを開始するシングルクォートを判別し、読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>メトリクス測定ツールのccccはシングルクォートの文字リテラル中のエスケープを認識しないため、文字リテラルを使わないことで回避しています。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*charactorCursol<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">[0]){</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++charactorCursol;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>literal<sp/>=<sp/>(<ref refid="struct_token" kindref="compound">Token</ref>){<sp/>.<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a655e632575aa38fd0f04138439932a22" kindref="member">STRING_LITERAL</ref>,<sp/>.word<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>読み込んだ文字列リテラルの情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wordLength<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">//<sp/>文字列リテラルに現在読み込んでいる文字の数です。初期値の段階で最初のシングルクォートは読み込んでいます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>次のシングルクォートがくるまで文字を読み込み続けます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*charactorCursol<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">[0]){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref><sp/>-<sp/>1<sp/>&lt;=<sp/>wordLength){</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>[wordLength++]<sp/>=<sp/>*charactorCursol++;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*charactorCursol<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;\&apos;&quot;</highlight><highlight class="normal">[0]){</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref><sp/>-<sp/>1<sp/>&lt;=<sp/>wordLength){</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最後のシングルクォートを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>[wordLength++]<sp/>=<sp/>*charactorCursol++;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>文字列の終端文字をつけます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>literal.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>[wordLength]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a8c2b776cce16ba8e6fff75b2c721b8ac" kindref="member">MAX_TOKEN_COUNT</ref><sp/>&lt;=<sp/>tokensNum){</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[tokensNum++]<sp/>=<sp/>literal;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a605a7b5193d135d441ed4ff6503ceef2" kindref="member">ERR_TOKEN_CANT_READ</ref>;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>キーワードを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(keywordConditions)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(keywordConditions[0]);<sp/>++i){</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorBackPoint<sp/>=<sp/>charactorCursol;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>condition<sp/>=<sp/>keywordConditions[i];<sp/></highlight><highlight class="comment">//<sp/>確認するキーワードの条件です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wordCursol<sp/>=<sp/>condition.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>;<sp/></highlight><highlight class="comment">//<sp/>確認するキーワードの文字列のうち、現在確認している一文字を指します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>キーワードが指定した文字列となっているか確認します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*wordCursol<sp/>&amp;&amp;<sp/>toupper(*charactorCursol++)<sp/>==<sp/>*wordCursol){</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++wordCursol;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>キーワードに識別子が区切りなしに続いていないかを確認するため、キーワードの終わった一文字あとを調べます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(search<sp/>=<sp/>alpahNumUnder;<sp/>*search<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/>*search;<sp/>++search){};</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*wordCursol<sp/>&amp;&amp;<sp/>!*search){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>見つかったキーワードを生成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a8c2b776cce16ba8e6fff75b2c721b8ac" kindref="member">MAX_TOKEN_COUNT</ref><sp/>&lt;=<sp/>tokensNum){</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[tokensNum++]<sp/>=<sp/>(<ref refid="struct_token" kindref="compound">Token</ref>){<sp/>.<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>=<sp/>condition.<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref>,<sp/>.word<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol<sp/>=<sp/>charactorBackPoint;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found){</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>記号を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(signConditions)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_token" kindref="compound">Token</ref>);<sp/>++i){</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorBackPoint<sp/>=<sp/>charactorCursol;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>condition<sp/>=<sp/>signConditions[i];<sp/></highlight><highlight class="comment">//<sp/>確認する記号の条件です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*wordCursol<sp/>=<sp/>condition.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>;<sp/></highlight><highlight class="comment">//<sp/>確認する記号の文字列のうち、現在確認している一文字を指します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>記号が指定した文字列となっているか確認します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*wordCursol<sp/>&amp;&amp;<sp/>toupper(*charactorCursol++)<sp/>==<sp/>*wordCursol){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++wordCursol;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*wordCursol){</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>見つかった記号を生成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a8c2b776cce16ba8e6fff75b2c721b8ac" kindref="member">MAX_TOKEN_COUNT</ref><sp/>&lt;=<sp/>tokensNum){</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[tokensNum++]<sp/>=<sp/>(<ref refid="struct_token" kindref="compound">Token</ref>){<sp/>.<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>=<sp/>condition.<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref>,<sp/>.word<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol<sp/>=<sp/>charactorBackPoint;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found){</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>識別子を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>識別子の最初の文字を確認します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(search<sp/>=<sp/>alpahUnder;<sp/>*search<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/>*search;<sp/>++search){};</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*search){</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>identifier<sp/>=<sp/>(<ref refid="struct_token" kindref="compound">Token</ref>){<sp/>.<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>,<sp/>.word<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};<sp/></highlight><highlight class="comment">//<sp/>読み込んだ識別子の情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wordLength<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>識別子に現在読み込んでいる文字の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>二文字目以降は数字も許可して文字の種類を確認します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(search<sp/>=<sp/>alpahNumUnder;<sp/>*search<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/>*search;<sp/>++search){};</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*search){</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref><sp/>-<sp/>1<sp/>&lt;=<sp/>wordLength){</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identifier.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>[wordLength++]<sp/>=<sp/>*search;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol++;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*search);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>識別子の文字列の終端文字を設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>identifier.<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>[wordLength]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>読み込んだ識別子を登録します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a8c2b776cce16ba8e6fff75b2c721b8ac" kindref="member">MAX_TOKEN_COUNT</ref><sp/>&lt;=<sp/>tokensNum){</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tokens[tokensNum++]<sp/>=<sp/>identifier;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol<sp/>=<sp/>charactorBackPoint;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a605a7b5193d135d441ed4ff6503ceef2" kindref="member">ERR_TOKEN_CANT_READ</ref>;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>トークン列を解析し、構文を読み取ります。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_token" kindref="compound">Token</ref><sp/>*tokenCursol<sp/>=<sp/>tokens;<sp/></highlight><highlight class="comment">//<sp/>現在見ているトークンを指します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_column" kindref="compound">Column</ref><sp/>selectColumns[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref><sp/>*<sp/><ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>SELECT句に指定された列名です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>selectColumnsを初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(selectColumns)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(selectColumns[0]);<sp/>i++)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectColumns[i]<sp/>=<sp/>(<ref refid="struct_column" kindref="compound">Column</ref>){<sp/>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>.columnName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectColumnsNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>SELECT句から現在読み込まれた列名の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_column" kindref="compound">Column</ref><sp/>orderByColumns[<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>ORDER句に指定された列名です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>orderByColumnsを初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(orderByColumns)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(orderByColumns[0]);<sp/>i++)</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orderByColumns[i]<sp/>=<sp/>(<ref refid="struct_column" kindref="compound">Column</ref>){<sp/>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>.columnName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orderByColumnsNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>ORDER句から現在読み込まれた列名の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4" kindref="member">TOKEN_KIND</ref><sp/>orders[<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>]<sp/>=<sp/>{<sp/>0<sp/>};<sp/></highlight><highlight class="comment">//<sp/>同じインデックスのorderByColumnsに対応している、昇順、降順の指定です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>whereExtensionNodes[<ref refid="_execute_s_q_l_8c_1a12a0d25ad70f55c1fdcf8ef860013ee8" kindref="member">MAX_EXTENSION_TREE_NODE_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>WHEREに指定された木のノードを、木構造とは無関係に格納します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>whereExtensionNodesを初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(whereExtensionNodes)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(whereExtensionNodes[0]);<sp/>i++)</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whereExtensionNodes[i]<sp/>=<sp/>(<ref refid="_execute_s_q_l_8c_1a6646c8070fe46fcefe5d1985f0eb327c" kindref="member">ExtensionTreeNode</ref>){</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref><sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref><sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref><sp/>={<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a89a37c3b8cfcc132733bc18b7065064e" kindref="member">NOT_TOKEN</ref>,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.right<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.inParen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.parenOpenBeforeClose<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.signCoefficient<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.column<sp/>=<sp/>{<sp/>.tableName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>.columnName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>},</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.calculated<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.value<sp/>=<sp/>{<sp/>.type<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>,<sp/>.value<sp/>=<sp/>{<sp/>.string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>}<sp/>},</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whereExtensionNodesNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>現在読み込まれているのwhereExtensionNodesの数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>*whereTopNode<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>式木の根となるノードです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SQLの構文を解析し、必要な情報を取得します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SELECT句を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a1697a91b22c2369eb2ba427c2d193329" kindref="member">SELECT</ref>){</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7a48eb0b5d5a758daa1bfac07896eccb" kindref="member">ASTERISK</ref>){</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>SELECT句に最初に指定された列名の読み込みかどうかです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref><sp/>||<sp/>first){</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref>){</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>){</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref><sp/>&lt;=<sp/>selectColumnsNum){</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>テーブル名が指定されていない場合と仮定して読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(selectColumns[selectColumnsNum].tableName,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(selectColumns[selectColumnsNum].columnName,<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fdcd2ffa8f71b49da9e0cfd4fb893f" kindref="member">DOT</ref>){</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>){</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>テーブル名が指定されていることがわかったので読み替えます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(selectColumns[selectColumnsNum].tableName,<sp/>selectColumns[selectColumnsNum].columnName,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(selectColumns[selectColumnsNum].columnName,<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++selectColumnsNum;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ORDER句とWHERE句を読み込みます。最大各一回ずつ書くことができます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readOrder<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>すでにORDER句が読み込み済みかどうかです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readWhere<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>すでにWHERE句が読み込み済みかどうかです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af3010c5c73212ce2ce652d3c18a681ad" kindref="member">ORDER</ref><sp/>||<sp/>tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a0116b78582fbf1fd6e069fde8dd308c4" kindref="member">WHERE</ref>){</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>二度目のORDER句はエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readOrder<sp/>&amp;&amp;<sp/>tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af3010c5c73212ce2ce652d3c18a681ad" kindref="member">ORDER</ref>){</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>二度目のWHERE句はエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readWhere<sp/>&amp;&amp;<sp/>tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a0116b78582fbf1fd6e069fde8dd308c4" kindref="member">WHERE</ref>){</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ORDER句を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af3010c5c73212ce2ce652d3c18a681ad" kindref="member">ORDER</ref>){</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readOrder<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8a7f2ff9fd0ff128eb1a14b98d95b4e6" kindref="member">BY</ref>){</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>ORDER句の最初の列名の読み込みかどうかです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref><sp/>||<sp/>first){</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref>){</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>){</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref><sp/>&lt;=<sp/>orderByColumnsNum){</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>テーブル名が指定されていない場合と仮定して読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(orderByColumns[orderByColumnsNum].tableName,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(orderByColumns[orderByColumnsNum].columnName,<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fdcd2ffa8f71b49da9e0cfd4fb893f" kindref="member">DOT</ref>){</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>){</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>テーブル名が指定されていることがわかったので読み替えます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(orderByColumns[orderByColumnsNum].tableName,<sp/>orderByColumns[orderByColumnsNum].columnName,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(orderByColumns[orderByColumnsNum].columnName,<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>並び替えの昇順、降順を指定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a6ec9ae46a1e5c631ae04fc9c4c2d63bc" kindref="member">ASC</ref>){</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orders[orderByColumnsNum]<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a6ec9ae46a1e5c631ae04fc9c4c2d63bc" kindref="member">ASC</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ac09f77dd64a2d5dedf24b5835d9eaa5a" kindref="member">DESC</ref>){</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orders[orderByColumnsNum]<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ac09f77dd64a2d5dedf24b5835d9eaa5a" kindref="member">DESC</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>指定がない場合は昇順となります。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orders[orderByColumnsNum]<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a6ec9ae46a1e5c631ae04fc9c4c2d63bc" kindref="member">ASC</ref>;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++orderByColumnsNum;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WHERE句を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a0116b78582fbf1fd6e069fde8dd308c4" kindref="member">WHERE</ref>){</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readWhere<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>*currentNode<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>現在読み込んでいるノードです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>オペランドを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>オペランドのノードを新しく生成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a12a0d25ad70f55c1fdcf8ef860013ee8" kindref="member">MAX_EXTENSION_TREE_NODE_COUNT</ref><sp/>&lt;=<sp/>whereExtensionNodesNum){</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode){</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>現在のノードを右の子にずらし、元の位置に新しいノードを挿入します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref><sp/>=<sp/>&amp;whereExtensionNodes[whereExtensionNodesNum++];</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref><sp/>=<sp/>currentNode;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode<sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最初はカレントノードに新しいノードを入れます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode<sp/>=<sp/>&amp;whereExtensionNodes[whereExtensionNodesNum++];</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>カッコ開くを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af0b0ce2414f256bad9da221d2532147d" kindref="member">OPEN_PAREN</ref>){</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentNode-&gt;<ref refid="struct__extension__tree__node_1a17b65544e06504e3e2dcfc0978c24ba6" kindref="member">parenOpenBeforeClose</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>オペランドに前置される+か-を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fe59ef12c3d13dc2a4d14c9b16c1f9" kindref="member">PLUS</ref><sp/>||<sp/>tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" kindref="member">MINUS</ref>){</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>+-を前置するのは列名と数値リテラルのみです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol[1].kind<sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref><sp/>&amp;&amp;<sp/>tokenCursol[1].kind<sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8ade753a42e694e371cfe2d7e0a3c702" kindref="member">INT_LITERAL</ref>){</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af35f788c826bd4e0197fdc379340f2fd" kindref="member">ERR_WHERE_OPERAND_TYPE</ref>;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" kindref="member">MINUS</ref>){</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1aaf7e9cae85c8ef976d164e1c57fe676d" kindref="member">signCoefficient</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>列名、整数リテラル、文字列リテラルのいずれかをオペランドとして読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>){</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>テーブル名が指定されていない場合と仮定して読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>,<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fdcd2ffa8f71b49da9e0cfd4fb893f" kindref="member">DOT</ref>){</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>){</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>テーブル名が指定されていることがわかったので読み替えます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>,<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>,<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a8ade753a42e694e371cfe2d7e0a3c702" kindref="member">INT_LITERAL</ref>){</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref><sp/>=<sp/>(<ref refid="struct_data" kindref="compound">Data</ref>){<sp/>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>,<sp/>.value<sp/>=<sp/>{<sp/>.integer<sp/>=<sp/>atoi(tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>)<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a655e632575aa38fd0f04138439932a22" kindref="member">STRING_LITERAL</ref>){</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref><sp/>=<sp/>(<ref refid="struct_data" kindref="compound">Data</ref>){<sp/>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>,<sp/>.value<sp/>=<sp/>{<sp/>.string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>前後のシングルクォートを取り去った文字列をデータとして読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref><sp/>+<sp/>1,<sp/>min(<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>,<sp/><ref refid="_execute_s_q_l_8c_1a8a172dc8da48ad20120e7a861682c32f" kindref="member">MAX_DATA_LENGTH</ref>));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>[<ref refid="_execute_s_q_l_8c_1a8a172dc8da48ad20120e7a861682c32f" kindref="member">MAX_DATA_LENGTH</ref><sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>[strlen(currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>オペランドの右のカッコ閉じるを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7093c88a2f741fb4dae5c36809a1958f" kindref="member">CLOSE_PAREN</ref>){</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>*searchedAncestor<sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>;<sp/></highlight><highlight class="comment">//<sp/>カッコ閉じると対応するカッコ開くを両方含む祖先ノードを探すためのカーソルです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(searchedAncestor){</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>searchedAncestorの左の子に対応するカッコ開くがないかを検索します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>*searched<sp/>=<sp/>searchedAncestor;<sp/></highlight><highlight class="comment">//<sp/>searchedAncestorの内部からカッコ開くを検索するためのカーソルです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(searched<sp/>&amp;&amp;<sp/>!searched-&gt;<ref refid="struct__extension__tree__node_1a17b65544e06504e3e2dcfc0978c24ba6" kindref="member">parenOpenBeforeClose</ref>){</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched<sp/>=<sp/>searched-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(searched){</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>対応付けられていないカッコ開くを一つ削除し、ノードがカッコに囲まれていることを記録します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--searched-&gt;<ref refid="struct__extension__tree__node_1a17b65544e06504e3e2dcfc0978c24ba6" kindref="member">parenOpenBeforeClose</ref>;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searchedAncestor-&gt;<ref refid="struct__extension__tree__node_1afd500005f33748f7a4980fa3328dd191" kindref="member">inParen</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searchedAncestor<sp/>=<sp/>searchedAncestor-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>演算子(オペレーターを読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_operator" kindref="compound">Operator</ref><sp/>operator<sp/>=(<ref refid="struct_operator" kindref="compound">Operator</ref>){<sp/>.<ref refid="struct_operator_1a949abb7093c09aa6dd15214a76f12307" kindref="member">kind</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a89a37c3b8cfcc132733bc18b7065064e" kindref="member">NOT_TOKEN</ref>,<sp/>.order<sp/>=<sp/>0<sp/>};<sp/></highlight><highlight class="comment">//<sp/>現在読み込んでいる演算子の情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>現在見ている演算子の情報を探します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(operators)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(operators[0]);<sp/>++j){</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(operators[j].kind<sp/>==<sp/>tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref>){</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>=<sp/>operators[j];</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>見つかった演算子の情報をもとにノードを入れ替えます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>*tmp<sp/>=<sp/>currentNode;<sp/></highlight><highlight class="comment">//ノードを入れ替えるために使う変数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>*searched<sp/>=<sp/>tmp;<sp/></highlight><highlight class="comment">//<sp/>入れ替えるノードを探すためのカーソルです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//カッコにくくられていなかった場合に、演算子の優先順位を参考に結合するノードを探します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>演算子の優先順位を検索する最初のループです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!first){</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>tmp-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>現在の読み込み場所をくくるカッコが開く場所を探します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(searched<sp/>&amp;&amp;<sp/>!searched-&gt;<ref refid="struct__extension__tree__node_1a17b65544e06504e3e2dcfc0978c24ba6" kindref="member">parenOpenBeforeClose</ref>){</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>searched<sp/>=<sp/>searched-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!searched<sp/>&amp;&amp;<sp/>tmp-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref><sp/>&amp;&amp;<sp/>(tmp-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>-&gt;<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref>.<ref refid="struct_operator_1a135c7bcb47fa416a43d55e4d60ab12b4" kindref="member">order</ref><sp/>&lt;=<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">.order<sp/>||<sp/>tmp-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>-&gt;<ref refid="struct__extension__tree__node_1afd500005f33748f7a4980fa3328dd191" kindref="member">inParen</ref>));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>演算子のノードを新しく生成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a12a0d25ad70f55c1fdcf8ef860013ee8" kindref="member">MAX_EXTENSION_TREE_NODE_COUNT</ref><sp/>&lt;=<sp/>whereExtensionNodesNum){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode<sp/>=<sp/>&amp;whereExtensionNodes[whereExtensionNodesNum++];</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref><sp/>=<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>見つかった場所に新しいノードを配置します。これまでその位置にあったノードは左の子となるよう、親ノードと子ノードのポインタをつけかえます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref><sp/>=<sp/>tmp-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>){</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref><sp/>=<sp/>currentNode;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref><sp/>=<sp/>currentNode;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>現在見ている種類が演算子の一覧から見つからなければ、WHERE句は終わります。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>木を根に向かってさかのぼり、根のノードを設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whereTopNode<sp/>=<sp/>currentNode;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(whereTopNode-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>){</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whereTopNode<sp/>=<sp/>whereTopNode-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FROM句を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a60efb85363b2afd235602dc0aee155f0" kindref="member">FROM</ref>){</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>FROM句の最初のテーブル名を読み込み中かどうかです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref><sp/>||<sp/>first){</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af81277bcd86412fe04bb68718ea09392" kindref="member">COMMA</ref>){</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol-&gt;<ref refid="struct_token_1a4da4a579ef6b75a055c63b95cd049c1a" kindref="member">kind</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a84f8ae2490f9e4bd2321fd21f4b0e807" kindref="member">IDENTIFIER</ref>){</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref><sp/>&lt;=<sp/>tableNamesNum){</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(tableNames[tableNamesNum++],<sp/>tokenCursol-&gt;<ref refid="struct_token_1af54d4780dfd7dbd0166cdc9d67a421db" kindref="member">word</ref>,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tokenCursol;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最後のトークンまで読み込みが進んでいなかったらエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tokenCursol<sp/>&lt;<sp/>&amp;tokens[tokensNum]){</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a0aa2f404054eb5ee93f6dc00601b098f" kindref="member">ERR_SQL_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_column" kindref="compound">Column</ref><sp/>inputColumns[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>][<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>入力されたCSVの行の情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>inputColumnsを初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputColumns)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputColumns[0]);<sp/>i++)</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputColumns[0])<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(inputColumns[0][0]);<sp/>j++)</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputColumns[i][j]<sp/>=<sp/>(<ref refid="struct_column" kindref="compound">Column</ref>){<sp/>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>.columnName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputColumnNums[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>]<sp/>=<sp/>{<sp/>0<sp/>};<sp/></highlight><highlight class="comment">//<sp/>各テーブルごとの列の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tableNamesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力ファイル名を生成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>csvExtension[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;.csv&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>csvの拡張子です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fileName[<ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(csvExtension)<sp/>-<sp/>1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>拡張子を含む、入力ファイルのファイル名です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncat(fileName,<sp/>tableNames[i],<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(csvExtension)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncat(fileName,<sp/>csvExtension,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref><sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(csvExtension)<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力ファイルを開きます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputTableFiles[i]<sp/>=<sp/>fopen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputTableFiles[i]){</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a1eb58a97942127f9b7d3856ac6cb1177" kindref="member">ERR_FILE_OPEN</ref>;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力CSVのヘッダ行を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>inputLine[<ref refid="_execute_s_q_l_8c_1af4da818bdb0173747177ed4ded094c12" kindref="member">MAX_FILE_LINE_LENGTH</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>ファイルから読み込んだ行文字列です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fgets(inputLine,<sp/><ref refid="_execute_s_q_l_8c_1af4da818bdb0173747177ed4ded094c12" kindref="member">MAX_FILE_LINE_LENGTH</ref>,<sp/>inputTableFiles[i])){</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol<sp/>=<sp/>inputLine;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>読み込んだ行を最後まで読みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*charactorCursol<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref><sp/>&lt;=<sp/>inputColumnNums[i]){</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(inputColumns[i][inputColumnNums[i]].tableName,<sp/>tableNames[i],<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*writeCursol<sp/>=<sp/>inputColumns[i][inputColumnNums[i]++].<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>;<sp/></highlight><highlight class="comment">//<sp/>列名の書き込みに利用するカーソルです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>列名を一つ読みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*charactorCursol<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writeCursol++<sp/>=<sp/>*charactorCursol++;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>書き込んでいる列名の文字列に終端文字を書き込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeCursol[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力行のカンマの分を読み進めます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++charactorCursol;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a14e7f98cf531dfd11d330ec68e7184d7" kindref="member">ERR_CSV_SYNTAX</ref>;</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力CSVのデータ行を読み込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowNum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(inputLine,<sp/><ref refid="_execute_s_q_l_8c_1af4da818bdb0173747177ed4ded094c12" kindref="member">MAX_FILE_LINE_LENGTH</ref>,<sp/>inputTableFiles[i])){</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1aa68fcced9961f40a9b9a2e255bbc8a33" kindref="member">MAX_ROW_COUNT</ref><sp/>&lt;=<sp/>rowNum){</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**row<sp/>=<sp/>inputData[i][rowNum++]<sp/>=<sp/>malloc(<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_data" kindref="compound">Data</ref>*));<sp/></highlight><highlight class="comment">//<sp/>入力されている一行分のデータです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!row){</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" kindref="member">ERR_MEMORY_ALLOCATE</ref>;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>生成した行を初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>;<sp/>++j){</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row[j]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>charactorCursol<sp/>=<sp/>inputLine;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>columnNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>いま何列目を読み込んでいるか。0基底の数字となります。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>読み込んだ行を最後まで読みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*charactorCursol<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>読み込んだデータを書き込む行のカラムを生成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MAX_COLUMN_COUNT<sp/>&lt;=<sp/>columnNum){</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row[columnNum]<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_data" kindref="compound">Data</ref>));</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!row[columnNum]){</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" kindref="member">ERR_MEMORY_ALLOCATE</ref>;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*row[columnNum]<sp/>=<sp/>(<ref refid="struct_data" kindref="compound">Data</ref>){<sp/>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>,<sp/>.value<sp/>=<sp/>{<sp/>.string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>}<sp/>};</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*writeCursol<sp/>=<sp/>row[columnNum++]-&gt;<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>;<sp/></highlight><highlight class="comment">//<sp/>データ文字列の書き込みに利用するカーソルです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>データ文字列を一つ読みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*charactorCursol<sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">&amp;&amp;<sp/>*charactorCursol<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*writeCursol++<sp/>=<sp/>*charactorCursol++;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>書き込んでいる列名の文字列に終端文字を書き込みます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeCursol[1]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力行のカンマの分を読み進めます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++charactorCursol;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>全てが数値となる列は数値列に変換します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>inputColumnNums[i];<sp/>++j){</highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>全ての行のある列について、データ文字列から符号と数値以外の文字を探します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>inputData[i];</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*currentChar<sp/>=<sp/>(*currentRow)[j]-&gt;<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentChar){</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNum<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*currentNum<sp/>=<sp/>signNum;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentNum){</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*currentChar<sp/>==<sp/>*currentNum){</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isNum<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentNum;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isNum){</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentChar;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found){</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentRow;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>符号と数字以外が見つからない列については、数値列に変換します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found){</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>inputData[i];</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(*currentRow)[j]<sp/>=<sp/>(<ref refid="struct_data" kindref="compound">Data</ref>){<sp/>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>,<sp/>.value<sp/>=<sp/>{<sp/>.integer<sp/>=<sp/>atoi((*currentRow)[j]-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>}<sp/>};</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentRow;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_column" kindref="compound">Column</ref><sp/>allInputColumns[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref><sp/>*<sp/><ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>入力に含まれるすべての列の一覧です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allInputColumnsを初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(allInputColumns)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(allInputColumns[0]);<sp/>i++)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allInputColumns[i]<sp/>=<sp/>(<ref refid="struct_column" kindref="compound">Column</ref>){<sp/>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>.columnName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allInputColumnsNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>入力に含まれるすべての列の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>入力ファイルに書いてあったすべての列をallInputColumnsに設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tableNamesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>inputColumnNums[i];<sp/>++j){</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(allInputColumns[allInputColumnsNum].tableName,<sp/>tableNames[i],<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(allInputColumns[allInputColumnsNum++].columnName,<sp/>inputColumns[i][j].columnName,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SELECT句の列名指定が*だった場合は、入力CSVの列名がすべて選択されます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!selectColumnsNum){</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>allInputColumnsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(selectColumns[selectColumnsNum].tableName,<sp/>allInputColumns[i].tableName,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(selectColumns[selectColumnsNum++].columnName,<sp/>allInputColumns[i].columnName,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_column" kindref="compound">Column</ref><sp/>outputColumns[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref><sp/>*<sp/><ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>出力するすべての行の情報です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputColumnNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>出力するすべての行の現在の数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SELECT句で指定された列名が、何個目の入力ファイルの何列目に相当するかを判別します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_column_index" kindref="compound">ColumnIndex</ref><sp/>selectColumnIndexes[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref><sp/>*<sp/><ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>SELECT句で指定された列の、入力ファイルとしてのインデックスです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selectColumnIndexesNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>selectColumnIndexesの現在の数。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>selectColumnsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>tableNamesNum;<sp/>++j){</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>inputColumnNums[j];<sp/>++k){</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>selectTableNameCursol<sp/>=<sp/>selectColumns[i].<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inputTableNameCursol<sp/>=<sp/>inputColumns[j][k].<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>;</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*selectTableNameCursol<sp/>&amp;&amp;<sp/>toupper(*selectTableNameCursol)<sp/>==<sp/>toupper(*inputTableNameCursol++)){</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++selectTableNameCursol;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>selectColumnNameCursol<sp/>=<sp/>selectColumns[i].<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>inputColumnNameCursol<sp/>=<sp/>inputColumns[j][k].<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*selectColumnNameCursol<sp/>&amp;&amp;<sp/>toupper(*selectColumnNameCursol)<sp/>==<sp/>toupper(*inputColumnNameCursol++)){</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++selectColumnNameCursol;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*selectColumnNameCursol<sp/>&amp;&amp;<sp/>!*inputColumnNameCursol<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!*selectColumns[i].tableName<sp/>||<sp/></highlight><highlight class="comment">//<sp/>テーブル名が設定されている場合のみテーブル名の比較を行います。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!*selectTableNameCursol<sp/>&amp;&amp;<sp/>!*inputTableNameCursol)){</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>既に見つかっているのにもう一つ見つかったらエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found){</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" kindref="member">ERR_BAD_COLUMN_NAME</ref>;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>見つかった値を持つ列のデータを生成します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MAX_COLUMN_COUNT<sp/>&lt;=<sp/>selectColumnIndexesNum){</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectColumnIndexes[selectColumnIndexesNum++]<sp/>=<sp/>(<ref refid="struct_column_index" kindref="compound">ColumnIndex</ref>){<sp/>.<ref refid="struct_column_index_1acfe5b8a6f47eccecf9e9cf9b97fb102c" kindref="member">table</ref><sp/>=<sp/>j,<sp/>.column<sp/>=<sp/>k<sp/>};</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>一つも見つからなくてもエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found){</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" kindref="member">ERR_BAD_COLUMN_NAME</ref>;</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>出力する列名を設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>selectColumnsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(outputColumns[outputColumnNum].tableName,<sp/>inputColumns[selectColumnIndexes[i].table][selectColumnIndexes[i].<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>].tableName,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(outputColumns[outputColumnNum].columnName,<sp/>inputColumns[selectColumnIndexes[i].table][selectColumnIndexes[i].<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>].columnName,<sp/><ref refid="_execute_s_q_l_8c_1aec7b4994021c554c1761ea31d016b680" kindref="member">MAX_WORD_LENGTH</ref>);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++outputColumnNum;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whereTopNode){</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>既存数値の符号を計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>whereExtensionNodesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whereExtensionNodes[i].</highlight><highlight class="keyword">operator</highlight><highlight class="normal">.kind<sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a89a37c3b8cfcc132733bc18b7065064e" kindref="member">NOT_TOKEN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!*whereExtensionNodes[i].<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whereExtensionNodes[i].<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>){</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whereExtensionNodes[i].<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>*=<sp/>whereExtensionNodes[i].<ref refid="struct__extension__tree__node_1aaf7e9cae85c8ef976d164e1c57fe676d" kindref="member">signCoefficient</ref>;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputRowsNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>出力データの現在の行数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>***currentRows[<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>]<sp/>=<sp/>{<sp/>NULL<sp/>};<sp/></highlight><highlight class="comment">//<sp/>入力された各テーブルの、現在出力している行を指すカーソルです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tableNamesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>各テーブルの先頭行を設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRows[i]<sp/>=<sp/>inputData[i];</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>出力するデータを設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_execute_s_q_l_8c_1aa68fcced9961f40a9b9a2e255bbc8a33" kindref="member">MAX_ROW_COUNT</ref><sp/>&lt;=<sp/>outputRowsNum){</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**row<sp/>=<sp/>outputData[outputRowsNum]<sp/>=<sp/>malloc(MAX_COLUMN_COUNT<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_data" kindref="compound">Data</ref>*));<sp/></highlight><highlight class="comment">//<sp/>出力している一行分のデータです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!row){</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" kindref="member">ERR_MEMORY_ALLOCATE</ref>;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>生成した行を初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>行の各列のデータを入力から持ってきて設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>selectColumnIndexesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row[i]<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_data" kindref="compound">Data</ref>));</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!row[i]){</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" kindref="member">ERR_MEMORY_ALLOCATE</ref>;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*row[i]<sp/>=<sp/>*(*currentRows[selectColumnIndexes[i].<ref refid="struct_column_index_1acfe5b8a6f47eccecf9e9cf9b97fb102c" kindref="member">table</ref>])[selectColumnIndexes[i].<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>];</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**allColumnsRow<sp/>=<sp/>allColumnOutputData[outputRowsNum++]<sp/>=<sp/>malloc(<ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref><sp/>*<sp/>MAX_COLUMN_COUNT<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_data" kindref="compound">Data</ref>*));<sp/></highlight><highlight class="comment">//<sp/>WHEREやORDERのためにすべての情報を含む行。rowとインデックスを共有します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allColumnsRow){</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" kindref="member">ERR_MEMORY_ALLOCATE</ref>;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>生成した行を初期化します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref><sp/>*<sp/><ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allColumnsRow[i]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allColumnsRowの列を設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>allColumnsNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>allColumnsRowの現在の列数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tableNamesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>inputColumnNums[i];<sp/>++j){</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allColumnsRow[allColumnsNum]<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_data" kindref="compound">Data</ref>));</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allColumnsRow[allColumnsNum]){</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a938201298c9aaeb8da4d4433ba36c809" kindref="member">ERR_MEMORY_ALLOCATE</ref>;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allColumnsRow[allColumnsNum++]<sp/>=<sp/>*(*currentRows[i])[j];</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WHEREの条件となる値を再帰的に計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(whereTopNode){</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__extension__tree__node" kindref="compound">ExtensionTreeNode</ref><sp/>*currentNode<sp/>=<sp/>whereTopNode;<sp/></highlight><highlight class="comment">//<sp/>現在見ているノードです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(currentNode){</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>子ノードの計算が終わってない場合は、まずそちらの計算を行います。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref><sp/>&amp;&amp;<sp/>!currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a522280470d8d2fa811c7077f8ea9f399" kindref="member">calculated</ref>){</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode<sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref><sp/>&amp;&amp;<sp/>!currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a522280470d8d2fa811c7077f8ea9f399" kindref="member">calculated</ref>){</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode<sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>;</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>自ノードの値を計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref>.<ref refid="struct_operator_1a949abb7093c09aa6dd15214a76f12307" kindref="member">kind</ref>){</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a89a37c3b8cfcc132733bc18b7065064e" kindref="member">NOT_TOKEN</ref>:</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ノードにデータが設定されている場合です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>データが列名で指定されている場合、今扱っている行のデータを設定します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>){</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>allInputColumnsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>whereTableNameCursol<sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>allInputTableNameCursol<sp/>=<sp/>allInputColumns[i].<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*whereTableNameCursol<sp/>&amp;&amp;<sp/>toupper(*whereTableNameCursol)<sp/>==<sp/>toupper(*allInputTableNameCursol++)){</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++whereTableNameCursol;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>whereColumnNameCursol<sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>allInputColumnNameCursol<sp/>=<sp/>allInputColumns[i].<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*whereColumnNameCursol<sp/>&amp;&amp;<sp/>toupper(*whereColumnNameCursol)<sp/>==<sp/>toupper(*allInputColumnNameCursol++)){</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++whereColumnNameCursol;</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*whereColumnNameCursol<sp/>&amp;&amp;<sp/>!*allInputColumnNameCursol<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!*currentNode-&gt;<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>.<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref><sp/>||<sp/></highlight><highlight class="comment">//<sp/>テーブル名が設定されている場合のみテーブル名の比較を行います。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!*whereTableNameCursol<sp/>&amp;&amp;<sp/>!*allInputTableNameCursol)){</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>既に見つかっているのにもう一つ見つかったらエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found){</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" kindref="member">ERR_BAD_COLUMN_NAME</ref>;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref><sp/>=<sp/>*allColumnsRow[i];</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>一つも見つからなくてもエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found){</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" kindref="member">ERR_BAD_COLUMN_NAME</ref>;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>符号を考慮して値を計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>==<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>){</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>*=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1aaf7e9cae85c8ef976d164e1c57fe676d" kindref="member">signCoefficient</ref>;</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a59a84258a4cb9025b567ee5139455029" kindref="member">EQUAL</ref>:</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a5fae95457121bd697edd588d1b64cc7c" kindref="member">GREATER_THAN</ref>:</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a263e9ce6c7c1285c26f7c51b2d457354" kindref="member">GREATER_THAN_OR_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a41b05932cd237b2b133fff1ade85bed5" kindref="member">LESS_THAN</ref>:</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ae9cbcadb9d4b6c38a9d5e6311cba749d" kindref="member">LESS_THAN_OR_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aee522b0a37857a8fdd19f82ad1b9b1d6" kindref="member">NOT_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>比較演算子の場合です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>比較できるのは文字列型か整数型で、かつ左右の型が同じ場合です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref><sp/>&amp;&amp;<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref><sp/>||</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>!=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref>){</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af35f788c826bd4e0197fdc379340f2fd" kindref="member">ERR_WHERE_OPERAND_TYPE</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba8a583f16e8d237a423c8c1d9087a4c72" kindref="member">BOOLEAN</ref>;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>比較結果を型と演算子によって計算方法を変えて、計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref>){</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>:</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref>.<ref refid="struct_operator_1a949abb7093c09aa6dd15214a76f12307" kindref="member">kind</ref>){</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a59a84258a4cb9025b567ee5139455029" kindref="member">EQUAL</ref>:</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>==<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a5fae95457121bd697edd588d1b64cc7c" kindref="member">GREATER_THAN</ref>:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>&gt;<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a263e9ce6c7c1285c26f7c51b2d457354" kindref="member">GREATER_THAN_OR_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>&gt;=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a41b05932cd237b2b133fff1ade85bed5" kindref="member">LESS_THAN</ref>:</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>&lt;<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ae9cbcadb9d4b6c38a9d5e6311cba749d" kindref="member">LESS_THAN_OR_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>&lt;=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aee522b0a37857a8fdd19f82ad1b9b1d6" kindref="member">NOT_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>!=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>:</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref>.<ref refid="struct_operator_1a949abb7093c09aa6dd15214a76f12307" kindref="member">kind</ref>){</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a59a84258a4cb9025b567ee5139455029" kindref="member">EQUAL</ref>:</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>strcmp(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a5fae95457121bd697edd588d1b64cc7c" kindref="member">GREATER_THAN</ref>:</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>strcmp(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a263e9ce6c7c1285c26f7c51b2d457354" kindref="member">GREATER_THAN_OR_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>strcmp(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>&gt;=<sp/>0;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a41b05932cd237b2b133fff1ade85bed5" kindref="member">LESS_THAN</ref>:</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>strcmp(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>&lt;<sp/>0;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ae9cbcadb9d4b6c38a9d5e6311cba749d" kindref="member">LESS_THAN_OR_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>strcmp(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>&lt;=<sp/>0;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aee522b0a37857a8fdd19f82ad1b9b1d6" kindref="member">NOT_EQUAL</ref>:</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>strcmp(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>)<sp/>!=<sp/>0;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fe59ef12c3d13dc2a4d14c9b16c1f9" kindref="member">PLUS</ref>:</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" kindref="member">MINUS</ref>:</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7a48eb0b5d5a758daa1bfac07896eccb" kindref="member">ASTERISK</ref>:</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aaabdfe7000ca535236502bb0c87ad944" kindref="member">SLASH</ref>:</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>四則演算の場合です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>演算できるのは整数型同士の場合のみです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref><sp/>||<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>){</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af35f788c826bd4e0197fdc379340f2fd" kindref="member">ERR_WHERE_OPERAND_TYPE</ref>;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>比較結果を演算子によって計算方法を変えて、計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref>.<ref refid="struct_operator_1a949abb7093c09aa6dd15214a76f12307" kindref="member">kind</ref>){</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a87fe59ef12c3d13dc2a4d14c9b16c1f9" kindref="member">PLUS</ref>:</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>+<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4af613d73b4e7b570ffd967df4a13c4225" kindref="member">MINUS</ref>:</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>-<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a7a48eb0b5d5a758daa1bfac07896eccb" kindref="member">ASTERISK</ref>:</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>*<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4aaabdfe7000ca535236502bb0c87ad944" kindref="member">SLASH</ref>:</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>/<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a865555c9f2e0458a7078486aa1b3254f" kindref="member">AND</ref>:</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a96727447c0ad447987df1c6415aef074" kindref="member">OR</ref>:</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>論理演算の場合です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>演算できるのは真偽値型同士の場合のみです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba8a583f16e8d237a423c8c1d9087a4c72" kindref="member">BOOLEAN</ref><sp/>||<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>!=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba8a583f16e8d237a423c8c1d9087a4c72" kindref="member">BOOLEAN</ref>){</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af35f788c826bd4e0197fdc379340f2fd" kindref="member">ERR_WHERE_OPERAND_TYPE</ref>;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref><sp/>=<sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba8a583f16e8d237a423c8c1d9087a4c72" kindref="member">BOOLEAN</ref>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>比較結果を演算子によって計算方法を変えて、計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(currentNode-&gt;<ref refid="struct__extension__tree__node_1a111e07ffa2e1925dddcc4f9665613bf6" kindref="member">operator</ref>.<ref refid="struct_operator_1a949abb7093c09aa6dd15214a76f12307" kindref="member">kind</ref>){</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a865555c9f2e0458a7078486aa1b3254f" kindref="member">AND</ref>:</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>&amp;&amp;<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref>;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4a96727447c0ad447987df1c6415aef074" kindref="member">OR</ref>:</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1afc78a4aacaa8a31770cb3bfcdafd34b6" kindref="member">left</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref><sp/>||<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a01e1a5858e5daff11a8cff13d153f371" kindref="member">right</ref>-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref>;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1a522280470d8d2fa811c7077f8ea9f399" kindref="member">calculated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>自身の計算が終わった後は親の計算に戻ります。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentNode<sp/>=<sp/>currentNode-&gt;<ref refid="struct__extension__tree__node_1ae9de9a3f8b58424d1e19bcb46cf01432" kindref="member">parent</ref>;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>条件に合わない行は出力から削除します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!whereTopNode-&gt;<ref refid="struct__extension__tree__node_1a28257144f172910738585b787410369c" kindref="member">value</ref>.<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a0f1743be3970e90b77ed83675f00e4fa" kindref="member">boolean</ref>){</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(row);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(allColumnsRow);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allColumnOutputData[--outputRowsNum]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputData[outputRowsNum]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WHERE条件の計算結果をリセットします。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>whereExtensionNodesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whereExtensionNodes[i].<ref refid="struct__extension__tree__node_1a522280470d8d2fa811c7077f8ea9f399" kindref="member">calculated</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>各テーブルの行のすべての組み合わせを出力します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最後のテーブルのカレント行をインクリメントします。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentRows[tableNamesNum<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最後のテーブルが最終行になっていた場合は先頭に戻し、順に前のテーブルのカレント行をインクリメントします。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>tableNamesNum<sp/>-<sp/>1;<sp/>!*currentRows[i]<sp/>&amp;&amp;<sp/>0<sp/>&lt;<sp/>i;<sp/>--i){</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentRows[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRows[i]<sp/>=<sp/>inputData[i];</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>最初のテーブルが最後の行を超えたなら出力行の生成は終わりです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*currentRows[0]){</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ORDER句による並び替えの処理を行います。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orderByColumnsNum){</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ORDER句で指定されている列が、全ての入力行の中のどの行なのかを計算します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orderByColumnIndexes[<ref refid="_execute_s_q_l_8c_1a00eb50cd283e0016af8ec6aa0a834165" kindref="member">MAX_COLUMN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>ORDER句で指定された列の、すべての行の中でのインデックスです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orderByColumnIndexesNum<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>現在のorderByColumnIndexesの数です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>orderByColumnsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>allInputColumnsNum;<sp/>++j){</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>orderByTableNameCursol<sp/>=<sp/>orderByColumns[i].<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>allInputTableNameCursol<sp/>=<sp/>allInputColumns[j].<ref refid="struct_column_1ace951a71e643187e4d42654df920c043" kindref="member">tableName</ref>;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*orderByTableNameCursol<sp/>&amp;&amp;<sp/>toupper(*orderByTableNameCursol)<sp/>==<sp/>toupper(*allInputTableNameCursol)){</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++orderByTableNameCursol;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++allInputTableNameCursol;</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>orderByColumnNameCursol<sp/>=<sp/>orderByColumns[i].<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>allInputColumnNameCursol<sp/>=<sp/>allInputColumns[j].<ref refid="struct_column_1a9d8dc3ae55f5e7c601dadbfa2c990f38" kindref="member">columnName</ref>;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*orderByColumnNameCursol<sp/>&amp;&amp;<sp/>toupper(*orderByColumnNameCursol)<sp/>==<sp/>toupper(*allInputColumnNameCursol)){</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++orderByColumnNameCursol;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++allInputColumnNameCursol;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!*orderByColumnNameCursol<sp/>&amp;&amp;<sp/>!*allInputColumnNameCursol<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!*orderByColumns[i].tableName<sp/>||<sp/></highlight><highlight class="comment">//<sp/>テーブル名が設定されている場合のみテーブル名の比較を行います。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!*orderByTableNameCursol<sp/>&amp;&amp;<sp/>!*allInputTableNameCursol)){</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>既に見つかっているのにもう一つ見つかったらエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found){</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" kindref="member">ERR_BAD_COLUMN_NAME</ref>;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MAX_COLUMN_COUNT<sp/>&lt;=<sp/>orderByColumnIndexesNum){</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84ad5bd1d2446069e05d8f68ff6dcdbbc59" kindref="member">ERR_MEMORY_OVER</ref>;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>orderByColumnIndexes[orderByColumnIndexesNum++]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>一つも見つからなくてもエラーです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found){</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a5f21828202f8f5efaf6cd6a9305a74b9" kindref="member">ERR_BAD_COLUMN_NAME</ref>;</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>outputDataとallColumnOutputDataのソートを一緒に行います。簡便のため凝ったソートは使わず、選択ソートを利用します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outputRowsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minIndex<sp/>=<sp/>i;<sp/></highlight><highlight class="comment">//<sp/>現在までで最小の行のインデックスです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>i<sp/>+<sp/>1;<sp/>j<sp/>&lt;<sp/>outputRowsNum;<sp/>++j){</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>jLessThanMin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>インデックスがjの値が、minIndexの値より小さいかどうかです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>orderByColumnIndexesNum;<sp/>++k){</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>*mData<sp/>=<sp/>allColumnOutputData[minIndex][orderByColumnIndexes[k]];<sp/></highlight><highlight class="comment">//<sp/>インデックスがminIndexのデータです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>*jData<sp/>=<sp/>allColumnOutputData[j][orderByColumnIndexes[k]];<sp/></highlight><highlight class="comment">//<sp/>インデックスがjのデータです。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cmp<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>比較結果です。等しければ0、インデックスjの行が大きければプラス、インデックスminIndexの行が大きければマイナスとなります。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mData-&gt;<ref refid="struct_data_1a2e5297257c1dc5eece871c3d2ccd4178" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>:</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp<sp/>=<sp/>jData-&gt;<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref><sp/>-<sp/>mData-&gt;<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1a009b81459ef18febd93691ecd35850a3" kindref="member">integer</ref>;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>:</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp<sp/>=<sp/>strcmp(jData-&gt;<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>,<sp/>mData-&gt;<ref refid="struct_data_1a2fb698a36b4f219379d3d102a7625651" kindref="member">value</ref>.<ref refid="struct_data_1afa1355e2cfae2389777be6a8474d3725" kindref="member">string</ref>);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>降順ならcmpの大小を入れ替えます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orders[k]<sp/>==<sp/><ref refid="_execute_s_q_l_8c_1a606ef381227b0ad1624e7eced6a781c4ac09f77dd64a2d5dedf24b5835d9eaa5a" kindref="member">DESC</ref>){</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmp<sp/>*=<sp/>-1;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmp<sp/>&lt;<sp/>0){</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jLessThanMin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>cmp){</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jLessThanMin){</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minIndex<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref>**<sp/>tmp<sp/>=<sp/>outputData[minIndex];</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputData[minIndex]<sp/>=<sp/>outputData[i];</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputData[i]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>allColumnOutputData[minIndex];</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allColumnOutputData[minIndex]<sp/>=<sp/>allColumnOutputData[i];</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allColumnOutputData[i]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>出力ファイルを開きます。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/>outputFile<sp/>=<sp/>fopen(outputFileName,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputFile<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a1eb58a97942127f9b7d3856ac6cb1177" kindref="member">ERR_FILE_OPEN</ref>;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>出力ファイルに列名を出力します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>selectColumnsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fputs(outputColumns[i].columnName,<sp/>outputFile);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" kindref="member">ERR_FILE_WRITE</ref>;</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>selectColumnsNum<sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fputs(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/>outputFile);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" kindref="member">ERR_FILE_WRITE</ref>;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fputs(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>outputFile);</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" kindref="member">ERR_FILE_WRITE</ref>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>出力ファイルにデータを出力します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>outputData;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref><sp/>=<sp/>*currentRow;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>selectColumnsNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>outputString[<ref refid="_execute_s_q_l_8c_1a8a172dc8da48ad20120e7a861682c32f" kindref="member">MAX_DATA_LENGTH</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>((*column)-&gt;type){</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27ba5a063e265d2ac903b6808e9f6e73ec46" kindref="member">INTEGER</ref>:</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itoa((*column)-&gt;value.integer,<sp/>outputString,<sp/>10);</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1aa082c000e4eff6ed512714ea0a33d27baee847e634a4297b274316de8a8ca9921" kindref="member">STRING</ref>:</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(outputString,<sp/>(*column)-&gt;value.string);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fputs(outputString,<sp/>outputFile);</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" kindref="member">ERR_FILE_WRITE</ref>;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>selectColumnsNum<sp/>-<sp/>1){</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fputs(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,<sp/>outputFile);</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" kindref="member">ERR_FILE_WRITE</ref>;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>fputs(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>outputFile);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a736e9ab32bfa78ed7ac62d8b321aa332" kindref="member">ERR_FILE_WRITE</ref>;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="struct__extension__tree__node_1aeb8ea049b6ea67b44273dd291ef5b5e7" kindref="member">column</ref>;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++currentRow;</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>正常時の後処理です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ファイルリソースを解放します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputTableFiles[i]){</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(inputTableFiles[i]);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af49300e99056ccb75c274f54bfbe428c" kindref="member">ERR_FILE_CLOSE</ref>;</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputFile){</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(outputFile);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>EOF){</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84af49300e99056ccb75c274f54bfbe428c" kindref="member">ERR_FILE_CLOSE</ref>;</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>ERROR;</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>メモリリソースを解放します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tableNamesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>inputData[i];</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**dataCursol<sp/>=<sp/>*currentRow;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*dataCursol){</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*dataCursol++);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*currentRow);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow++;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>outputData;</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**dataCursol<sp/>=<sp/>*currentRow;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*dataCursol){</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*dataCursol++);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*currentRow);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow++;</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>allColumnOutputData;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**dataCursol<sp/>=<sp/>*currentRow;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*dataCursol){</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*dataCursol++);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*currentRow);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow++;</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_execute_s_q_l_8c_1ae5b8f30a103016d3f52d025017848d84a2bc49ec37d6a5715dd23e85f1ff5bb59" kindref="member">OK</ref>;</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal">ERROR:</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>エラー時の処理です。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ファイルリソースを解放します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_execute_s_q_l_8c_1a0ed97d05b7fd7835c8611cbfcf459a0b" kindref="member">MAX_TABLE_COUNT</ref>;<sp/>++i){</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputTableFiles[i]){</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(inputTableFiles[i]);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputFile){</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(outputFile);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>メモリリソースを解放します。</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tableNamesNum;<sp/>++i){</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>inputData[i];</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**dataCursol<sp/>=<sp/>*currentRow;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*dataCursol){</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*dataCursol++);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*currentRow);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow++;</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>outputData;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**dataCursol<sp/>=<sp/>*currentRow;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*dataCursol){</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*dataCursol++);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*currentRow);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow++;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/>currentRow<sp/>=<sp/>allColumnOutputData;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*currentRow){</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_data" kindref="compound">Data</ref><sp/>**dataCursol<sp/>=<sp/>*currentRow;</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*dataCursol){</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*dataCursol++);</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(*currentRow);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentRow++;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/>error;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="ExecuteSQL.c"/>
  </compounddef>
</doxygen>
